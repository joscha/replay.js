/*!
* replay.js - recording and replaying method calls
* v0.0.1 - 2013-11-26 10:07:33 PM UTC
* http://github.com/joscha/replay.js
* Copyright (c) 2013 Joscha Feth; License: MIT
*/

(function(){!function(a,b,c){return"object"==typeof exports&&"object"==typeof module?module.exports=c():"function"==typeof define&&define.amd?define(c):a[b]=c()}("object"==typeof window?window:this,"ReplayJS",function(){var a;return new(a=function(){function a(){}return a.prototype.num=0,a.prototype.recordings={},a.prototype.recorder=function(){var a,b=this;return this.recordings[this.num]=[],a=function(){return b.recordings[arguments.callee.num].push(arguments)},a.num=this.num++,a.replay=this,a},a.prototype.play=function(a,b,c){var d,e;if(null==c&&(c=null),e=this.recordings[null!=a?a.num:void 0],"undefined"==typeof e)throw{message:"Given recorder unknown"};if(a.replay!==this)throw{message:"Given recorder from different ReplayJS"};if("function"!=typeof b)throw{message:"Given target function is not a function"};for(;d=e.shift();)null!=b&&b.apply(c,d)},a}())})}).call(this);
//# sourceMappingURL=lib/replay.min.js.map